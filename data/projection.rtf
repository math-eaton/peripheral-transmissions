{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red202\green202\blue202;\red23\green23\blue23;\red89\green138\blue67;
\red70\green137\blue204;\red66\green179\blue255;\red140\green211\blue254;\red212\green214\blue154;\red167\green197\blue152;
\red202\green202\blue202;\red23\green23\blue23;\red89\green138\blue67;\red70\green137\blue204;\red66\green179\blue255;
\red167\green197\blue152;\red183\green111\blue179;\red140\green211\blue254;\red23\green90\blue226;\red255\green255\blue255;
\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c83137\c83137\c83137;\cssrgb\c11765\c11765\c11765;\cssrgb\c41569\c60000\c33333;
\cssrgb\c33725\c61176\c83922;\cssrgb\c30980\c75686\c100000;\cssrgb\c61176\c86275\c99608;\cssrgb\c86275\c86275\c66667;\cssrgb\c70980\c80784\c65882;
\cssrgb\c83137\c83137\c83137;\cssrgb\c11765\c11765\c11765;\cssrgb\c41569\c60000\c33333;\cssrgb\c33725\c61176\c83922;\cssrgb\c30980\c75686\c100000;
\cssrgb\c70980\c80784\c65882;\cssrgb\c77255\c52549\c75294;\cssrgb\c61176\c86275\c99608;\cssrgb\c10196\c45098\c90980;\cssrgb\c100000\c100000\c100000;
\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww18220\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
       \cf4 // Define the map projection\cf2 \cb1 \
\cb3         \cf5 const\cf2  \cf6 projection\cf2  = \cf7 d3\cf2 .\cf8 geoTransverseMercator\cf2 ()\cb1 \
\cb3             .\cf8 translate\cf2 ([\cf6 width\cf2  / \cf9 2\cf2 , \cf6 height\cf2  / \cf9 2\cf2 ])\cb1 \
\cb3             .\cf8 scale\cf2 (\cf9 3333\cf2 )\cb1 \
\cb3             .\cf8 rotate\cf2 ([\cf9 113\cf2 , -\cf9 30\cf2 ]);\cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf10 \cb11 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10                 \cf12 \strokec12 // Define the start and end projection parameters\cf10 \cb1 \strokec10 \
\cb11                 \cf13 \strokec13 const\cf10 \strokec10  \cf14 \strokec14 startScale\cf10 \strokec10  = \cf15 \strokec15 18000\cf10 \strokec10 ;\cb1 \
\cb11                 \cf13 \strokec13 const\cf10 \strokec10  \cf14 \strokec14 endScale\cf10 \strokec10  = \cf15 \strokec15 5000\cf10 \strokec10 ;\cb1 \
\cb11                 \cf13 \strokec13 const\cf10 \strokec10  \cf14 \strokec14 startRotate\cf10 \strokec10  = [\cf15 \strokec15 118\cf10 \strokec10 , -\cf15 \strokec15 33\cf10 \strokec10 ];\cb1 \
\cb11                 \cf13 \strokec13 const\cf10 \strokec10  \cf14 \strokec14 endRotate\cf10 \strokec10  = [\cf15 \strokec15 105\cf10 \strokec10 , -\cf15 \strokec15 28\cf10 \strokec10 ];\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf16 \cb11 \strokec16 if\cf10 \strokec10  (\cf14 \strokec14 scrollPercentage\cf10 \strokec10  < \cf15 \strokec15 0.5\cf10 \strokec10 ) \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf10 \cb11                     \cf13 \strokec13 const\cf10 \strokec10  \cf14 \strokec14 localPercentage\cf10 \strokec10  = \cf14 \strokec14 scrollPercentage\cf10 \strokec10  * \cf15 \strokec15 2\cf10 \strokec10 ;\cb1 \
\cb11                     \cf17 \strokec17 currentScale\cf10 \strokec10  = \cf14 \strokec14 startScale\cf10 \strokec10  + \cf14 \strokec14 localPercentage\cf10 \strokec10  * (\cf14 \strokec14 midScale\cf10 \strokec10  - \cf14 \strokec14 startScale\cf10 \strokec10 );\cb1 \
\cb11                     \cf17 \strokec17 currentRotate\cf10 \strokec10  = [\cb1 \
\cb11                         \cf14 \strokec14 startRotate\cf10 \strokec10 [\cf15 \strokec15 0\cf10 \strokec10 ] + \cf14 \strokec14 localPercentage\cf10 \strokec10  * (\cf14 \strokec14 midRotate\cf10 \strokec10 [\cf15 \strokec15 0\cf10 \strokec10 ] - \cf14 \strokec14 startRotate\cf10 \strokec10 [\cf15 \strokec15 0\cf10 \strokec10 ]),\cb1 \
\cb11                         \cf14 \strokec14 startRotate\cf10 \strokec10 [\cf15 \strokec15 1\cf10 \strokec10 ] + \cf14 \strokec14 localPercentage\cf10 \strokec10  * (\cf14 \strokec14 midRotate\cf10 \strokec10 [\cf15 \strokec15 1\cf10 \strokec10 ] - \cf14 \strokec14 startRotate\cf10 \strokec10 [\cf15 \strokec15 1\cf10 \strokec10 ]),\cb1 \
\cb11                     ];\cb1 \
\cb11                 \} \cf16 \strokec16 else\cf10 \strokec10  \{\cb1 \
\cb11                     \cf13 \strokec13 const\cf10 \strokec10  \cf14 \strokec14 localPercentage\cf10 \strokec10  = (\cf14 \strokec14 scrollPercentage\cf10 \strokec10  - \cf15 \strokec15 0.5\cf10 \strokec10 ) * \cf15 \strokec15 2\cf10 \strokec10 ;\cb1 \
\cb11                     \cf17 \strokec17 currentScale\cf10 \strokec10  = \cf14 \strokec14 midScale\cf10 \strokec10  + \cf14 \strokec14 localPercentage\cf10 \strokec10  * (\cf14 \strokec14 endScale\cf10 \strokec10  - \cf14 \strokec14 midScale\cf10 \strokec10 );\cb1 \
\cb11                     \cf17 \strokec17 currentRotate\cf10 \strokec10  = [\cb1 \
\cb11                         \cf14 \strokec14 midRotate\cf10 \strokec10 [\cf15 \strokec15 0\cf10 \strokec10 ] + \cf14 \strokec14 localPercentage\cf10 \strokec10  * (\cf14 \strokec14 endRotate\cf10 \strokec10 [\cf15 \strokec15 0\cf10 \strokec10 ] - \cf14 \strokec14 midRotate\cf10 \strokec10 [\cf15 \strokec15 0\cf10 \strokec10 ]),\cb1 \
\cb11                         \cf14 \strokec14 midRotate\cf10 \strokec10 [\cf15 \strokec15 1\cf10 \strokec10 ] + \cf14 \strokec14 localPercentage\cf10 \strokec10  * (\cf14 \strokec14 endRotate\cf10 \strokec10 [\cf15 \strokec15 1\cf10 \strokec10 ] - \cf14 \strokec14 midRotate\cf10 \strokec10 [\cf15 \strokec15 1\cf10 \strokec10 ]),\cb1 \
\cb11                 ];\
\
\
clip to:\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf18 \cb19 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 35.260459, -121.296445 by 31.431860, -94.126615
\fs32 \cf0 \cb1 \
\pard\pardeftab720\qc\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\fs24 \cf18 \cb19 20.587213, -116.716307 by 21.050819, -93.239911
\fs32 \cf0 \cb1 \
\pard\pardeftab720\qc\partightenfactor0
\cf0 \
\
\'97\
\
\pard\pardeftab720\partightenfactor0
\cf0   // Get the length of the path, which we will use for the intial offset to "hide"\
  // the graph\
  const length = path.node().getTotalLength();\
  \
  // This function will animate the path over and over again\
  function repeat() \{\
    // Animate the path by setting the initial offset and dasharray and then transition the offset to 0\
    path.attr("stroke-dasharray", length + " " + length)\
        .attr("stroke-dashoffset", length)\
          .transition()\
          .ease(d3.easeLinear)\
          .attr("stroke-dashoffset", 0)\
          .duration(6000)\
          .on("end", () => setTimeout(repeat, 1000)); // this will repeat the animation after waiting 1 second\
\
  // Animate the graph for the first time\
  repeat();\
  \
 return svg.node();\
\pard\pardeftab720\qc\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf10 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 \
}